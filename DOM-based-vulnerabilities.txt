

- Taint-flow vulnerablities.

- DOM-based open redirection

- The following are typically sources that can be used to exploit a variety of taint-flow vulnerablilities:-
    document.URL
    document.documentURI
    document.URLUnencoded
    docuement.baseURI
    location
    document.cookie
    document.referrer
    window.name
    history.pushState
    history.replaceState
    localStorage
    sessionStorage
    IndexedDB
    Database

- The following kinds of data can also be used as sources to exploit taint-flow vulnerabilities:-
    - Reflected data
    - Stored data
    - Web messages


- Which sinks can lead to DOM-based vulnerablilities?

DOM-based vulnerability             Example sink
DOM XSS                             document.write()
open redirection                    window.location
cookie manipulation                 document.cookie
javascript injection                eval()
documnet-domain manipulation        document.domain
websocket-URL poisoning             WebSocket()
link manipulation                   element.src
web message manipulation            postMessage()
ajax request-header manipulation    setRequestHeader()
local file-path manipulation        FileReader.readAsText()
client-side SQL injection           ExecuteSql()
HTML5-storage manipulation          sessionStorage.setItem()
client-side XPath injection         document.evaluate()
client-side JSON injection          JSON.parse()
DOM-data manipulation               element.setAttribute()
Denial of service                   RegExp()

- How to prevent DOM-based taint-flow vulneabilities
    - DOM clobbering


