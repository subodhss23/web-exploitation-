

1. What is seralization?

- Serialization vs deserialization

- Exploiting insecure deserialization vulnerabilities:-
    - how to identify insecure deserialization?
    - modify serialized object that are expected by the website
    - passing malicious data into dangerous website functionality
    - inject arbitary object type
    - chaining method invocation to control the flow of data into dangerous sink gadgets
    - manually creating your own advanced exploits
    - PHAR deserialization


- How to identify insecure deserialization?

============================================
Manipulating serialized objects.
============================================

1. modifying object attributes
    -  modifying serialized objects

2. modifying data types
    - modifying serialized data types

3. using application functionality
    - using application functionality to exploit insecure deserializtion

4. magic methods

5. injecting arbitrary objects
    - arbitrary object injection in php

===============================================
Gadget chains
===============================================

1. working with pre-built gadget chains

2. ysoserial

3. php generic gadget chains
    - exploiting php deserialization with a pre-built gadget chain

4. working with documented gadget chains
    - exploiting ruby deserialization using a documented gadget chain

=====================================================
Creating your own exploit
====================================================

1. developing a custom gadget chain for java deserializtion
2. developing a custom gadget chain for php deserialization

========================================================
PHAR deserialization
========================================================

1. using PHAR deserialization to deploy a custom gadget chain

========================================================

- Exploiting deserialization using memory corruption.

